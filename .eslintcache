[{"/Users/agata/Desktop/covid-app/src/index.tsx":"1","/Users/agata/Desktop/covid-app/src/App.tsx":"2","/Users/agata/Desktop/covid-app/src/hooks/useApi.ts":"3","/Users/agata/Desktop/covid-app/src/reportWebVitals.ts":"4","/Users/agata/Desktop/covid-app/src/components/search/Search.tsx":"5","/Users/agata/Desktop/covid-app/src/context/SearchContext.tsx":"6","/Users/agata/Desktop/covid-app/src/components/table/Table.tsx":"7","/Users/agata/Desktop/covid-app/src/components/table/TableContainer.tsx":"8","/Users/agata/Desktop/covid-app/src/components/table/utils/filters/DefaultColumnFilter.tsx":"9","/Users/agata/Desktop/covid-app/src/components/table/utils/filters/index.ts":"10","/Users/agata/Desktop/covid-app/src/components/chart/Chart.tsx":"11","/Users/agata/Desktop/covid-app/src/hooks/index.ts":"12","/Users/agata/Desktop/covid-app/src/components/chart/index.ts":"13","/Users/agata/Desktop/covid-app/src/components/chart/ChartContainer.tsx":"14","/Users/agata/Desktop/covid-app/src/components/search/index.ts":"15","/Users/agata/Desktop/covid-app/src/components/table/index.ts":"16","/Users/agata/Desktop/covid-app/src/components/switch/index.ts":"17","/Users/agata/Desktop/covid-app/src/components/switch/Switch.tsx":"18","/Users/agata/Desktop/covid-app/src/components/Main.tsx":"19","/Users/agata/Desktop/covid-app/src/context/index.ts":"20"},{"size":556,"mtime":1608301657468,"results":"21","hashOfConfig":"22"},{"size":271,"mtime":1608484083823,"results":"23","hashOfConfig":"22"},{"size":1693,"mtime":1608476504651,"results":"24","hashOfConfig":"22"},{"size":425,"mtime":1608155480839,"results":"25","hashOfConfig":"22"},{"size":3898,"mtime":1608502701649,"results":"26","hashOfConfig":"22"},{"size":1154,"mtime":1608408583187,"results":"27","hashOfConfig":"22"},{"size":2967,"mtime":1608476156578,"results":"28","hashOfConfig":"22"},{"size":2218,"mtime":1608485188817,"results":"29","hashOfConfig":"22"},{"size":492,"mtime":1608476173331,"results":"30","hashOfConfig":"22"},{"size":38,"mtime":1608472249382,"results":"31","hashOfConfig":"22"},{"size":598,"mtime":1608501585207,"results":"32","hashOfConfig":"22"},{"size":26,"mtime":1608417226599,"results":"33","hashOfConfig":"22"},{"size":58,"mtime":1608472078520,"results":"34","hashOfConfig":"22"},{"size":1850,"mtime":1608502835014,"results":"35","hashOfConfig":"22"},{"size":25,"mtime":1608472231672,"results":"36","hashOfConfig":"22"},{"size":58,"mtime":1608472287618,"results":"37","hashOfConfig":"22"},{"size":26,"mtime":1608482949811,"results":"38","hashOfConfig":"22"},{"size":441,"mtime":1608483637122,"results":"39","hashOfConfig":"22"},{"size":342,"mtime":1608484741474,"results":"40","hashOfConfig":"22"},{"size":32,"mtime":1608417212268,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"3hxgdl",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/agata/Desktop/covid-app/src/index.tsx",[],["86","87"],"/Users/agata/Desktop/covid-app/src/App.tsx",[],"/Users/agata/Desktop/covid-app/src/hooks/useApi.ts",[],"/Users/agata/Desktop/covid-app/src/reportWebVitals.ts",[],"/Users/agata/Desktop/covid-app/src/components/search/Search.tsx",[],"/Users/agata/Desktop/covid-app/src/context/SearchContext.tsx",[],"/Users/agata/Desktop/covid-app/src/components/table/Table.tsx",["88","89"],"import React, {Fragment } from 'react';\nimport {useTable, useFilters, usePagination, Row, Cell, UseTableOptions, UseFiltersColumnProps} from 'react-table';\nimport {useSearchState} from \"../../context/SearchContext\";\nimport {DefaultColumnFilter} from './utils/filters';\n\n\nexport const Table = ({columns, data }: UseTableOptions<any>) => {\n  const search = useSearchState();\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      Header: '',\n      Filter: DefaultColumnFilter,\n    }),\n    []\n  )\n\n  //  useTable\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    footerGroups,\n    //@ts-ignore\n    page,\n        //@ts-ignore\n\n    canPreviousPage,\n        //@ts-ignore\n\n    canNextPage,\n            //@ts-ignore\n\n    pageOptions,\n            //@ts-ignore\n\n    nextPage,\n            //@ts-ignore\n\n    previousPage,\n            //@ts-ignore\n\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n      initialState: { pageIndex: 0 , pageSize: 20},\n\n\n    } as UseTableOptions<any>,\n    useFilters,\n    usePagination\n  )\n  \n  // Render the UI for your table\n  return (\n    <Fragment>\n    <table className=\"table\"\n    {...getTableProps()}>\n      <thead className=\"thead-light\">\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n             <th scope=\"col\" {...column.getHeaderProps()}>\n             {column.render('Header')}\n             {/* Render the columns filter UI */}\n\n    \n             <div>{(column as unknown as UseFiltersColumnProps<any>).canFilter && column.Header === 'Country' ? column.render('Filter') : null}</div>\n           </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n          {page.map((row: Row<object>, i: number) => {\n                prepareRow(row)\n                return (\n                  <tr {...row.getRowProps()}>\n                    {row.cells.map((cell: Cell) => {\n                      return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                    })}\n                  </tr>\n                )\n          })}\n      </tbody>\n\n       <tfoot>\n        {footerGroups.map(group => (\n          <tr {...group.getFooterGroupProps()}>\n            {group.headers.map(column => (\n              <td {...column.getFooterProps()}>{column.render('Footer')}</td>\n            ))}\n          </tr>\n        ))}\n      </tfoot>\n    </table>\n\n    <div className=\"pagination\">\n       \n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {'<'}\n        </button>{' '}\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          {'>'}\n        </button>{' '}\n        <span>\n          Page{' '}\n          <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>{' '}\n        </span>\n       \n    </div>\n    </Fragment>\n  )\n}\n","/Users/agata/Desktop/covid-app/src/components/table/TableContainer.tsx",["90","91","92","93"],"import React, { FunctionComponent, Fragment } from 'react';\nimport {Table} from './Table';\nimport { useDataApi } from '../../hooks/useApi';\nimport { TableInstance } from 'react-table';\nimport {SearchProvider} from '../../context';\nimport {useHistory} from 'react-router-dom';\n\nexport const covidSummaryUrl = 'https://api.covid19api.com/summary';\n\ninterface ButtonToNavigate {\n  title: string;\n  path: string;\n}\n\n// TODO: Move to separated file \nexport const ButtonToNavigate = ({ title, path }: ButtonToNavigate) => {\n\n  const history = useHistory();\n\n  return (\n    <button\n      type=\"button\"\n      onClick={() => history.push(path)}>\n      {title}\n    </button>\n  );\n}\n\nconst getTotalCount = (info: TableInstance, key: string): number => {\n  return info.rows.reduce((sum, row) => row.values[key] + sum, 0);\n}\n\nconst columnsConfig = [\n  {\n    Header: 'Country',\n    accessor: 'Country',\n  },\n  {\n    Header: 'Deaths',\n    accessor: 'NewDeaths',\n    Footer: (info: TableInstance) => {\n      const total = React.useMemo(() => getTotalCount(info, 'NewDeaths'), [info.rows])\n      return <>Total: <div>{total}</div></>\n    },\n  },\n  {\n    Header: 'Recovered',\n    accessor: 'NewRecovered',\n    Footer: (info: TableInstance) => {\n      const total = React.useMemo(() => getTotalCount(info, 'NewRecovered'), [info.rows])\n      return <>Total: <div>{total}</div></>\n    }\n\n  }, {\n    Header: 'New Cases',\n    accessor: 'NewConfirmed',\n    Footer: (info: TableInstance) => {\n      const total = React.useMemo(() => getTotalCount(info, 'NewConfirmed'), [info.rows])\n      return <>Total: <div>{total}</div></>\n    }\n  }\n];\n\nexport const TableContainer: FunctionComponent = () => {\n\n\n\n  const[{data, isError, isLoading}] = useDataApi(covidSummaryUrl, null)\n \n  const columns = React.useMemo(() => columnsConfig, []);\n\n  const rows =  React.useMemo(() => {\n    if (data) {\n      return data['Countries']\n    }\n  }, [data]);\n\n\n  return (\n    <SearchProvider>\n      <ButtonToNavigate title=\"View Chart\" path=\"/chart\" />\n      {isLoading && <div> Loading ... </div>}\n      {isError &&  <div>An error occurred. Try to refresh the browser. </div> }\n      {rows && <Table columns={columns} data={rows}/>}\n    </SearchProvider> \n  )\n}","/Users/agata/Desktop/covid-app/src/components/table/utils/filters/DefaultColumnFilter.tsx",["94"],"import React, { useEffect } from 'react';\nimport {Search} from '../../../search/Search';\nimport { UseFiltersColumnProps } from 'react-table';\nimport { useSearchState } from '../../../../context/SearchContext';\n\ninterface FilteredColumn {\n  column: UseFiltersColumnProps<any>\n}\nexport const DefaultColumnFilter = ({\n  column: { setFilter }\n}: FilteredColumn) => {\n\n  const state = useSearchState();\n  useEffect(() => {\n    setFilter(state);\n  }, [state]);\n\n  return (\n    <Search />\n    )\n}\n\n\n","/Users/agata/Desktop/covid-app/src/components/table/utils/filters/index.ts",[],"/Users/agata/Desktop/covid-app/src/components/chart/Chart.tsx",[],"/Users/agata/Desktop/covid-app/src/hooks/index.ts",[],"/Users/agata/Desktop/covid-app/src/components/chart/index.ts",[],"/Users/agata/Desktop/covid-app/src/components/chart/ChartContainer.tsx",[],"/Users/agata/Desktop/covid-app/src/components/search/index.ts",[],"/Users/agata/Desktop/covid-app/src/components/table/index.ts",[],"/Users/agata/Desktop/covid-app/src/components/switch/index.ts",[],"/Users/agata/Desktop/covid-app/src/components/switch/Switch.tsx",[],"/Users/agata/Desktop/covid-app/src/components/Main.tsx",[],"/Users/agata/Desktop/covid-app/src/context/index.ts",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":8,"column":9,"nodeType":"101","messageId":"102","endLine":8,"endColumn":15},{"ruleId":"99","severity":1,"message":"103","line":44,"column":25,"nodeType":"101","messageId":"102","endLine":44,"endColumn":33},{"ruleId":"104","severity":1,"message":"105","line":16,"column":14,"nodeType":"101","messageId":"106","endLine":16,"endColumn":30},{"ruleId":"107","severity":1,"message":"108","line":42,"column":75,"nodeType":"109","endLine":42,"endColumn":86,"suggestions":"110"},{"ruleId":"107","severity":1,"message":"108","line":50,"column":78,"nodeType":"109","endLine":50,"endColumn":89,"suggestions":"111"},{"ruleId":"107","severity":1,"message":"108","line":58,"column":78,"nodeType":"109","endLine":58,"endColumn":89,"suggestions":"112"},{"ruleId":"107","severity":1,"message":"113","line":16,"column":6,"nodeType":"109","endLine":16,"endColumn":13,"suggestions":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"@typescript-eslint/no-unused-vars","'search' is assigned a value but never used.","Identifier","unusedVar","'pageSize' is assigned a value but never used.","@typescript-eslint/no-redeclare","'ButtonToNavigate' is already defined.","redeclared","react-hooks/exhaustive-deps","React Hook React.useMemo has a missing dependency: 'info'. Either include it or remove the dependency array.","ArrayExpression",["117"],["118"],["119"],"React Hook useEffect has a missing dependency: 'setFilter'. Either include it or remove the dependency array. If 'setFilter' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"121","fix":"123"},{"desc":"121","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [info]",{"range":"127","text":"128"},{"range":"129","text":"128"},{"range":"130","text":"128"},"Update the dependencies array to be: [setFilter, state]",{"range":"131","text":"132"},[1060,1071],"[info]",[1304,1315],[1546,1557],[445,452],"[setFilter, state]"]